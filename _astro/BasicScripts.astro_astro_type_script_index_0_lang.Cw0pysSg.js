import{getCurrentLocale as p,getByPath as w}from"./translationHelper.hzVhlbSt.js";const l=new Map;async function L(t){if(l.has(t))return l.get(t);try{const e=await fetch(`/content-bundles/${t}.json`);if(!e.ok)throw new Error(`Failed to load content bundle for ${t}`);const s=await e.json();return l.set(t,s),s}catch(e){return console.warn(`Could not load content for locale ${t}, falling back to English`,e),t!=="en"?L("en"):{}}}async function i(){const t=p(),e=await L(t);document.querySelectorAll("[data-content]").forEach(async o=>{const s=o.dataset.content,c=e[s]||"";c&&(o.innerHTML=c)})}function _(){l.clear()}typeof window<"u"&&(window.addEventListener("locale-changed",()=>{_(),i()}),document.addEventListener("DOMContentLoaded",i),document.addEventListener("astro:after-swap",i));let m={};async function h(t){if(m[t])return m[t];try{const e=await fetch(`/i18n/${t}.json`);if(!e.ok){if(console.warn(`Failed to fetch translations for ${t}, status: ${e.status}`),t!=="en")return await h("en");throw new Error(`HTTP ${e.status}`)}const o=await e.json();return m[t]=o,o}catch(e){if(console.error(`Failed to load translations for locale: ${t}`,e),t!=="en")try{return await h("en")}catch(o){console.error("English fallback also failed:",o)}return{}}}const d=async()=>{const t=p(),e=await h(t),o=e.locale_direction||(t==="ar"?"rtl":"ltr");document.documentElement.dir=o,document.documentElement.lang=t,document.querySelectorAll("[data-only-locale]").forEach(n=>{n.dataset.onlyLocale===t?(n.style.display="",n.style.removeProperty("display")):n.style.display="none"});const c=new Intl.NumberFormat(e.translate_numeral||t),g=document.querySelectorAll("[data-t]");document.querySelectorAll("[data-t-placeholder]").forEach(n=>{const r=n.dataset.tPlaceholder,a=w(e,r);a!=null&&a!==!1&&(n.placeholder=String(a))}),g.forEach(n=>{const r=n.dataset.t;let a=w(e,r);if(a!=null&&a!==!1){if(typeof a=="string"){const b=/\{([^}]+)\}|(\w+_count|\w+_total|\w+_number)/g;a=a.replace(b,(C,P,$)=>{const y=P||$,u=y.replace(/_([a-z])/g,(f,v)=>v.toUpperCase());if(n.dataset[u]){if(y.match(/_count$|_total$|_number$/)){const f=parseInt(n.dataset[u],10);if(!isNaN(f))return c.format(f)}return n.dataset[u]}return C})}n.textContent=String(a)}}),document.querySelectorAll("[data-format-number]").forEach(n=>{const r=n.textContent?.trim();if(r){const a=parseInt(r.replace(/[^0-9]/g,""),10);isNaN(a)||(n.textContent=c.format(a))}}),await i()};function E(){new URLSearchParams(window.location.search).get("locale")&&d()}document.addEventListener("DOMContentLoaded",()=>{E(),d()});document.addEventListener("astro:after-swap",()=>{E(),d()});window.addEventListener("locale-changed",d);export{d as a};
